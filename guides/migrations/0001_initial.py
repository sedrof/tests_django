# Generated by Django 3.2.2 on 2021-05-09 22:33

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("articles", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=150,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="title",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        help_text="the content slug. Accepts unicode characters.",
                        max_length=150,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="optional description for this content.",
                        max_length=200,
                        verbose_name="description",
                    ),
                ),
                (
                    "thumbnailURL",
                    models.URLField(
                        blank=True,
                        default="",
                        help_text="optional category thumbnail.",
                        verbose_name="thumbnail url",
                    ),
                ),
                (
                    "app",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "Home"),
                            (2, "Account"),
                            (3, "Boomfront"),
                            (4, "Boomaffiliate"),
                            (5, "Inboxbird"),
                            (6, "Adilo"),
                            (7, "Huula"),
                            (8, "Bigdrive"),
                            (9, "Contacts"),
                            (10, "Uvendi"),
                            (11, "Portal"),
                            (12, "Helpcenter"),
                            (13, "Bigpartner"),
                            (14, "Corina"),
                            (100, "Platform"),
                        ],
                        help_text="the BigCommand app ID this category apply to. Required for relevance filtering.",
                        null=True,
                        verbose_name="app",
                    ),
                ),
            ],
            options={
                "verbose_name": "category",
                "verbose_name_plural": "categories",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Guide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=150,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="title",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="optional description for this content.",
                        max_length=200,
                        verbose_name="description",
                    ),
                ),
                (
                    "isPinned",
                    models.BooleanField(
                        default=False,
                        help_text="pinned feature requests stick to the top.",
                        verbose_name="is pinned",
                    ),
                ),
            ],
            options={
                "verbose_name": "guide",
                "verbose_name_plural": "guides",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="LearningProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "startDate",
                    models.DateTimeField(null=True, verbose_name="start date"),
                ),
                (
                    "lessonsCompleted",
                    models.PositiveSmallIntegerField(verbose_name="lessons completed"),
                ),
                (
                    "completionDate",
                    models.DateTimeField(null=True, verbose_name="completion date"),
                ),
            ],
            options={
                "verbose_name": "student",
                "verbose_name_plural": "students",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=150,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="title",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        help_text="the content slug. Accepts unicode characters.",
                        max_length=150,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="the body content of the post.",
                        verbose_name="content",
                    ),
                ),
                (
                    "stepNumber",
                    models.PositiveSmallIntegerField(
                        help_text="lesson step in the guide",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="step number",
                    ),
                ),
                (
                    "readDuration",
                    models.DurationField(null=True, verbose_name="read duration"),
                ),
                (
                    "watchDuration",
                    models.DurationField(null=True, verbose_name="watch duration"),
                ),
                (
                    "videoTranscript",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="optional video transcript.",
                        verbose_name="video transcript",
                    ),
                ),
                (
                    "isHelpFulCount",
                    models.IntegerField(
                        default=0,
                        help_text="how many members found this lesson useful.",
                        verbose_name="is helpful count",
                    ),
                ),
                (
                    "isNotHelpFulCount",
                    models.IntegerField(
                        default=0,
                        help_text="how many members did not find this lesson useful.",
                        verbose_name="is not helpful count",
                    ),
                ),
            ],
            options={
                "verbose_name": "lesson",
                "verbose_name_plural": "lessons",
                "ordering": ["stepNumber"],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=150,
                        validators=[django.core.validators.MinLengthValidator(2)],
                        verbose_name="title",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        allow_unicode=True,
                        help_text="the content slug. Accepts unicode characters.",
                        max_length=150,
                        unique=True,
                        verbose_name="slug",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="optional description for this content.",
                        max_length=200,
                        verbose_name="description",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="topics",
                        related_query_name="topic",
                        to="guides.category",
                        verbose_name="category",
                    ),
                ),
            ],
            options={
                "verbose_name": "topic",
                "verbose_name_plural": "topics",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "member_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="articles.member",
                    ),
                ),
                (
                    "savedGuides",
                    models.ManyToManyField(
                        blank=True,
                        help_text="all guides saved by this student.",
                        related_name="studentSaved",
                        related_query_name="studentSaved",
                        to="guides.Guide",
                        verbose_name="saved guides",
                    ),
                ),
                (
                    "viewedGuides",
                    models.ManyToManyField(
                        blank=True,
                        help_text="all guides viewed by this student.",
                        related_name="studentViews",
                        related_query_name="studentView",
                        through="guides.LearningProgress",
                        to="guides.Guide",
                        verbose_name="video guides",
                    ),
                ),
            ],
            options={
                "verbose_name": "student",
                "verbose_name_plural": "students",
                "default_permissions": [],
            },
            bases=("articles.member",),
        ),
        migrations.AddIndex(
            model_name="lesson",
            index=models.Index(
                fields=["stepNumber"], name="guides_less_stepNum_f8c0bb_idx"
            ),
        ),
        migrations.AddField(
            model_name="learningprogress",
            name="guide",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="guides.guide",
                verbose_name="guide",
            ),
        ),
        migrations.AddField(
            model_name="learningprogress",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="guides.student",
                verbose_name="student",
            ),
        ),
        migrations.AddField(
            model_name="guide",
            name="creators",
            field=models.ManyToManyField(
                related_name="guides",
                related_query_name="guide",
                to="articles.Member",
                verbose_name="creators",
            ),
        ),
        migrations.AddField(
            model_name="guide",
            name="lessons",
            field=models.ManyToManyField(
                blank=True,
                related_name="guides",
                related_query_name="guide",
                to="guides.Lesson",
                verbose_name="lessons",
            ),
        ),
        migrations.AddField(
            model_name="guide",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                related_name="guides",
                related_query_name="guide",
                to="articles.Tag",
                verbose_name="tags",
            ),
        ),
        migrations.AddField(
            model_name="guide",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="guides",
                related_query_name="guide",
                to="guides.topic",
                verbose_name="topic",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="learningprogress",
            unique_together={("student", "guide")},
        ),
    ]
